<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.carthageking.mc</groupId>
		<artifactId>mcck-core-EXAMPLES</artifactId>
		<version>1.0.0</version>
	</parent>
	<artifactId>mcck-core-EXAMPLES-springboot-rest-hibernate</artifactId>


	<dependencies>
		<dependency>
			<groupId>org.carthageking.mc</groupId>
			<artifactId>mcck-core-json</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
			<exclusions>
				<!--
				Excluded to prevent warnings about "Standard Commons Logging discovery in
				action with spring-jcl: please remove commons-logging.jar from classpath
				in order to avoid potential conflicts"
				-->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-envers</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

		<!--
			When we enable the /actuator/prometheus endpoint, then we need to
			include this dependency
		-->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
		</dependency>

		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.carthageking.mc</groupId>
			<artifactId>mcck-core-cucumber</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.carthageking.mc</groupId>
			<artifactId>mcck-core-httpclient-java11-httpclient</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-suite</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-java</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-junit-platform-engine</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.cucumber</groupId>
			<artifactId>cucumber-spring</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- add the dependency that matches the version of cucumber used -->
		<!--
		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-cucumber7-jvm</artifactId>
			<scope>test</scope>
		</dependency>
		-->
		<dependency>
			<groupId>org.carthageking.mc</groupId>
			<artifactId>mcck-core-allure-cucumber7-jvm</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>io.qameta.allure</groupId>
			<artifactId>allure-junit5</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>


	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<!--
					to create a jar/war that can be executed without using 'java -jar' command,
					the ZIP layout can be used. More information about that here:
				https://docs.spring.io/spring-boot/docs/3.1.x/maven-plugin/reference/htmlsingle/#packaging
				-->
				<executions>
					<execution>
						<goals>
							<!--
								Add this so we can get information from the /actuator/info
								endpoint
							-->
							<goal>build-info</goal>
							<!--
								Tells the plugin to generate an uber jar
							-->
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>net.masterthought</groupId>
				<artifactId>maven-cucumber-reporting</artifactId>
				<executions>
					<execution>
						<id>maven-cucumber-reporting-create-report</id>
						<phase>test</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${project.build.directory}/cucumber-cucumber-report-html</outputDirectory>
							<inputDirectory>${project.build.directory}</inputDirectory>
							<jsonFiles>
								<param>cucumber/**/cucumber-*.json</param>
							</jsonFiles>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>com.trivago.rta</groupId>
				<artifactId>cluecumber-maven</artifactId>
				<executions>
					<execution>
						<id>cluecumber-maven-create-report</id>
						<phase>test</phase>
						<goals>
							<goal>reporting</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<sourceJsonReportDirectory>${project.build.directory}/cucumber</sourceJsonReportDirectory>
					<generatedHtmlReportDirectory>
						${project.build.directory}/cucumber-cluecumber-report-html</generatedHtmlReportDirectory>
				</configuration>
			</plugin>

			<!--
				https://allurereport.org/docs/junit5/#configure-aspectj
				configure the surefire unit test plugin so it can talk to allure
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<argLine>
						-javaagent:"${settings.localRepository}/org/aspectj/aspectjweaver/${aspectjweaver.version}/aspectjweaver-${aspectjweaver.version}.jar" -Dorg.aspectj.dump.directory="${project.build.directory}"
					</argLine>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.aspectj</groupId>
						<artifactId>aspectjweaver</artifactId>
						<version>${aspectjweaver.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>io.qameta.allure</groupId>
				<artifactId>allure-maven</artifactId>
				<executions>
					<execution>
						<id>allure-maven-create-report</id>
						<phase>test</phase>
						<goals>
							<!--
								generates allure report in target/site/allure-maven-plugin path
							-->
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>


	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>